@model Application.DTOs.ProductResponse
@{
    ViewData["Title"] = "Product Details";
    Layout = "_DashboardLayout";
}

<div class="container mb-4">
    <div class="card">
        <div class="card-header bg-primary text-white">Product Details</div>
        <div class="card-body">

            <!-- —— Photos Section —— -->
            <hr />
            <h5>Product Photos</h5>

            @if (Model.PhotoUrls != null && Model.PhotoUrls.Any())
            {
                <div class="row mt-3">
                    @foreach (var photoUrl in Model.PhotoUrls)
                    {
                        <div class="col-md-3 mb-3">
                            <img src="@photoUrl" class="img-fluid rounded shadow-sm" />
                        </div>
                    }

                </div>
            }
            else
            {
                <p class="text-muted mt-3">No photos uploaded.</p>
            }

            <dl class="row">
                <dt class="col-sm-2">Name</dt>
                <dd class="col-sm-10">@Model.Name</dd>

                <dt class="col-sm-2">Price</dt>
                <dd class="col-sm-10">₦@Model.Price.ToString("")</dd>

                <dt class="col-sm-2">Quantity</dt>
                <dd class="col-sm-10">@Model.Quantity</dd>

                <dt class="col-sm-2">Category</dt>
                <dd class="col-sm-10">@Model.CategoryName</dd>

                <dt class="col-sm-2">Active</dt>
                <dd class="col-sm-10">@(Model.IsActive ? "True" : "False")</dd>
            </dl>

            <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-secondary me-2">Edit</a>
            <a asp-action="Index" class="btn btn-primary">Back to list</a>
        </div> 
    </div>   
</div>     
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}