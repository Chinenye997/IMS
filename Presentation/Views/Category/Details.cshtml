@* @model Application.DTOs.CategoryResponse
@using Application.DTOs
@{
    ViewData["Title"] = "Category Details";
    Layout = "_DashboardLayout";
    var count = 0;
}

<div class="container py-4">
    <h2 class="mb-4">@Model.Name Details</h2>
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger" role="alert">
            @TempData["Error"]
        </div>
    }

    <div class="card mb-4">
        <div class="card-body">
           
            <p><strong>Name:</strong> @Model.Name</p>
            <p><strong>Status:</strong> @(Model.IsActive ? "Active" : "Inactive")</p>
            <p><strong>Created At:</strong> @Model.CreatedAt</p>
           
        </div>
    </div>

    <h4>Products</h4>
    @if (Model.Products != null && Model.Products.Any())
    {
        <div class="table-responsive">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Id</th>
                        <th>Name</th>
                        <th>Price</th>
                        <th>Quantity</th>
                        <th>Created At</th>
                       
                    </tr>
                </thead>
                <tbody>
                    @foreach (var product in Model.Products)
                    {
                        <tr>
                            <td>@(++count)</td>
                            <td>@product.Name</td>
                            <td>$@product.Price</td>
                            <td>@product.Quantity</td>
                            <td>@product.CreatedAt</td>
                            <td>@product.CreatedBy</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <p>No products available for this category.</p>
    }

    <!-- Add Product Button (Placeholder for now) -->
    <a asp-controller="Product" asp-action="Create" asp-route-categoryId="@Model.Id" asp-route-returnUrl="@Url.Action("Details", "Category", new { id = Model.Id })" class="btn btn-primary mt-3">
        <i class="bi bi-plus-lg"></i> Add Product
    </a>
    <a asp-action="Index" class="btn btn-secondary mt-3 ms-2">Back to Categories</a>
</div> *@


@model Application.DTOs.CategoryResponse
@{
    ViewData["Title"] = "Category Details";
    Layout = "_DashboardLayout";
    var count = 0;
}

<!-- REPLACE YOUR EXISTING CONTENT WITH THIS CARD DESIGN -->
<div class="card shadow border-0 mt-4">
    <div class="card-header bg-primary bg-gradient text-white py-3">
        <div class="row">
            <div class="col-12 text-center">
                <h2>@Model.Name Details</h2>
            </div>
        </div>
    </div>
    <div class="card-body p-4">
        <div class="mb-4">
            <h4>Category Information</h4>
            <dl class="row">
                <dt class="col-sm-3">Name</dt>
                <dd class="col-sm-9">@Model.Name</dd>

                <dt class="col-sm-3">Status</dt>
                <dd class="col-sm-9">
                    <span class="badge @(Model.IsActive ? "bg-success" : "bg-secondary")">
                        @(Model.IsActive ? "Active" : "Inactive")
                    </span>
                </dd>

                <dt class="col-sm-3">Created At</dt>
                <dd class="col-sm-9">@Model.CreatedAt.ToString("f")</dd>

                <dt class="col-sm-3">Created By</dt>
                <dd class="col-sm-9">@Model.CreatedBy</dd>
            </dl>
        </div>

        <div class="mb-4">
            <h4>Products</h4>
            @if (Model.Products != null && Model.Products.Any())
            {
                <div class="table-responsive">
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>Id</th>
                                <th>Name</th>
                                <th>Price</th>
                                <th>Quantity</th>
                                <th>Created At</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var product in Model.Products)
                            {
                                <tr>
                                    <td>@(++count)</td>
                                    <td>@product.Name</td>
                                    <td>₦@product.Price.ToString("")</td>
                                    <td>@product.Quantity</td>
                                    <td>@product.CreatedAt.ToString("d")</td>
                                    <td>
                                        <form asp-controller="Product" asp-action="Delete"
                                              asp-route-id="@product.Id" method="post"
                                              onsubmit="return confirm('Delete this product?')">
                                            <button type="submit" class="btn btn-sm btn-danger">
                                                <i class="bi bi-trash"></i>
                                            </button>
                                        </form>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="alert alert-info">
                    No products available for this category
                </div>
            }
        </div>


        <!-- ADD REASSIGN PRODUCTS SECTION RIGHT HERE -->
        @if (Model.Products != null && Model.Products.Any())
        {
            <div class="mt-3">
                <h5>Reassign Products</h5>
                <form asp-action="ReassignProducts" asp-route-id="@Model.Id" method="post">
                    <div class="input-group">
                        <select name="newCategoryId" class="form-select" required>
                            <option value="">-- Select New Category --</option>
                            @foreach (var cat in ViewBag.AllCategories)
                            {
                                <option value="@cat.Id">@cat.Name</option>
                            }
                        </select>
                        <button type="submit" class="btn btn-warning">
                            Reassign All Products
                        </button>
                    </div>
                </form>
            </div>
        }

        <div class="d-flex justify-content-between pt-2">
            <a asp-controller="Product" asp-action="Create" asp-route-categoryId="@Model.Id"
               class="btn btn-primary">
                <i class="bi bi-plus-lg me-1"></i> Add Product
            </a>
            <a asp-action="Index" class="btn btn-outline-secondary">
                <i class="bi bi-arrow-left me-1"></i> Back to Categories
            </a>
        </div>
    </div>
</div>



